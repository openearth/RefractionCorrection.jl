var documenterSearchIndex = {"docs":
[{"location":"usage/#Using-RefractionCorrection-1","page":"Using RefractionCorrection","title":"Using RefractionCorrection","text":"","category":"section"},{"location":"usage/#","page":"Using RefractionCorrection","title":"Using RefractionCorrection","text":"upcoming","category":"page"},{"location":"getting_started/#Getting-started-1","page":"Getting started","title":"Getting started","text":"","category":"section"},{"location":"getting_started/#","page":"Getting started","title":"Getting started","text":"First install the package on Julia 1.3 or later.","category":"page"},{"location":"getting_started/#","page":"Getting started","title":"Getting started","text":"]add https://github.com/openearth/RefractionCorrection.jl.git","category":"page"},{"location":"getting_started/#","page":"Getting started","title":"Getting started","text":"A simple use-case.","category":"page"},{"location":"getting_started/#","page":"Getting started","title":"Getting started","text":"using RefractionCorrection\nusing LazIO\n\nfn_in = \"pointcloud.laz\"\nfn_out = \"corrected_pointcloud.laz\"\n\nds = LazIO.open(fn_in)\npoints = collect(ds)\ncorrect!(points)\n\nwrite!(fn_out, ds, points)","category":"page"},{"location":"function_index/#Function-index-1","page":"Function index","title":"Function index","text":"","category":"section"},{"location":"function_index/#","page":"Function index","title":"Function index","text":"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"CurrentModule = RefractionCorrection","category":"page"},{"location":"#RefractionCorrection.jl-1","page":"Home","title":"RefractionCorrection.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"This is the documentation of RefractionCorrection.jl. RefractionCorrection is a Julia library to correct bathymetric pointclouds from LiDAR.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Current features","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Account and correct for refraction, both angle and speed\nGathers LIDAR returns into individual pulses\nLoad .laz pointclouds with LazIO library\nWrites results to new pointcloud","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Not yet implemented","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Editing file\nCustom classes and filtering\nWater surface as single reference plane","category":"page"},{"location":"#Contents-1","page":"Home","title":"Contents","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Pages = [\"getting_started.md\", \"usage.md\",\n\"function_index.md\"]","category":"page"}]
}
